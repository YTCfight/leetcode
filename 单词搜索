class Solution {
    public boolean exist(char[][] board, String word) {
        char[] chars = word.toCharArray();
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (help(board, chars, i, j, 0)) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean help(char[][] board, char[] chars, int i, int j, int k) {
        if (i < 0 || j < 0 || i >= board.length || j >= board[0].length || board[i][j] != chars[k]) {
            return false;
        }
        if (k == chars.length - 1) {
            return true;
        }
        char tmp = board[i][j];
        board[i][j] = '/';
        boolean ret = help(board, chars, i - 1, j, k + 1) || help(board, chars, i + 1, j, k + 1) ||
                      help(board, chars, i, j - 1, k + 1) || help(board, chars, i, j + 1, k + 1);
        board[i][j] = tmp;
        return ret;
    }
}
