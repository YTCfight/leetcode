class Solution {
    List<List<Integer>> list = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        if (root == null) {
            return list;
        }
        help(new ArrayList<>(), root, sum, 0);
        return list;
    }
    public void help(List<Integer> l, TreeNode root, int sum, int k) {
        k += root.val;
        l.add(root.val);
        if (k == sum && root.left == null && root.right == null) {
            list.add(new ArrayList<>(l));
            return;
        }
        if (root.left != null) {
            help(l, root.left, sum, k);
            l.remove(l.size() - 1);
        }
        if (root.right != null) {
            help(l, root.right, sum, k);
            l.remove(l.size() - 1);
        }
    }
}
