 //最佳观光组合
 //方法一：暴力求解法
 int BestCombination(int arr[], int len)
 {
	 int i = 0;
	 int j = 0;
	 int max = 0;
	 for (i = 0; i < len; i++)
	 {
		 for (j = i + 1; j < len; j++)
		 {
			 int tmp = arr[i] + arr[j] - i - j;
			 if (tmp>max)
			 {
				 max = tmp;
			 }
		 }
	 }
	 return max;
 }
 //方法二：求出arr[i]+i的最大值与arr[j]-j的最小值即可
 int BestCombination1(int arr[], int len)
 {
	 int max = 0;
	 int min = arr[0] - 0;
	 for (int i = 0; i < len; i++)
	 {
		 int tmp = arr[i]+i ;
		 if (tmp>max)
		 {
			 max = tmp;
		 }
		 int ret = arr[i] - i;
		 if (ret < min)
		 {
			 min = ret;
		 }
	 }
	 return max - min;
 }
 int main()
 {
	 int arr[] = { 8, 1, 5, 2, 6 };
	 int len = sizeof(arr) / sizeof(arr[0]);
	 int ret=BestCombination(arr, len);
	 printf("%d\n", ret);
	 system("pause");
	 return 0;
 }
