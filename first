//整数翻转
int Fun(int input)
{
	int tmp=0;
	while(input)
	{
		tmp=tmp*10+(input%10);
		input/=10;
	}
	return tmp;
}
int main()
{
	int input = 0;
	scanf("%d", &input);
	int ret=Fun(input);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
//#endif
//回文数
int Fun(int input)
{
	int tmp = 0;
	int cur = input;
	while (cur)
	{
		tmp = tmp * 10 + (cur % 10);
		cur /= 10;
	}
	if (tmp == input)
	{
		return 1;
	}
	return 0;
}
int main()
{
	int input = 0;
	scanf("%d", &input);
	int ret = Fun(input);
	if (ret == 1)
	{
		printf("是回文数\n");
	}
	else
	{
		printf("不是回文数\n");
	}
	system("pause");
	return 0;
}
//删除排序数组中的重复项
int Fun(int *arr, int len)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < len; i++)
	{
		for (j = i+1; j < len; j++)
		{
			if (arr[j] == arr[i])
			{
				while (j + 1 < len)
				{
					arr[j] = arr[j + 1];
					j++;
					len--;
				}
			}
		}
	}
	return len;
}
int main()
{
	int arr[] = {1,1,2 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int ret = Fun(arr, len);
	printf("%d\n", ret);
	for (int i = 0; i < ret; i++)
	{
		printf("%d ", arr[i]);
	}
	system("pause");
	return 0;
}
//#endif
//移除元素
int Fun(int *arr, int input, int len)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < len; i++)
	{
		int j = i;
		if (arr[j] == input)
		{
			while (j+1< len)
			{
              arr[j] = arr[j + 1];
			  j++;
			}
			len--;
		}
	}
	return len;
}
int main()
{
	int arr[] = { 3,2,2,3};
	int input = 0;
	int len = sizeof(arr) / sizeof(arr[0]);
	scanf("%d",&input);
	int ret = Fun(arr, input, len);
	printf("%d\n", ret);
	for (int i = 0; i < ret; i++)
	{
		printf("%d ", arr[i]);
	}
	system("pause");
	return 0;
}
//#endif
//实现strstr
int MyStrstr(char* str1, char* str2,int len)
{
	char* s1 = str1;
	char* s2 = str2;
	int i = 0;
	for (i = 0; i < len; i++)
	{
		s1 = str1+i;
		s2 = str2;
		while (*s1 == *s2 && *str1 != '\0')
		{
			s1++;
			s2++;
		}
		if (*s2 == '\0')
		{
			return i;
		}
		if (*s1 == '\0')
		{
			return -1;
		}
		i++;
	}
	return -1;
}
int main()
{
	char* str1 = "abbbcdef";
	int len = sizeof(str1) / sizeof(str1[0]);
	char* str2 = "bbc";
	int ret = MyStrstr(str1, str2,len);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
//#endif
//搜索插入位置
int Fun(int *arr, int input,int len)
{
	int i = 0;
	for (i = 0; i < len; i++)
	{
		if (arr[i] == input)
		{
			return i;
		}
		if (arr[i]>input)
		{
			return i;
		}
	}
	//看最后一位与input的关系
	if (arr[i - 1] < input)
	{
		return i;
	}
}
int main()
{
	int arr[] = { 1, 3, 5, 6 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int input = 0;
	scanf("%d", &input);
	int ret = Fun(arr, input,len);
	printf("%d\n", ret);
	system("pause");
	return 0;
}
