 //x的平方根


//二分查找
     public int mySqrt(int x) {
        if (x < 1) {
            return 0;
        }
       long left = 1;
        long right = x;
        while (left < right - 1) {
            long mid = left + (right - left) / 2;
            if (mid * mid > x) {
                right = mid;
            } else if (mid * mid < x) {
                left = mid;
            } else {
                return (int)mid;
            }
        }
        return (int)left;
    }
 
 
 
 
 
 //暴力求解法
   public int mySqrt(int x) {
        if (x == 1) {
            return 1;
        } 
        if (x == Integer.MAX_VALUE) {
            return 46340;
        }
        int i = 0;
        for (i = 0; i <= x - 1; i++) {
            if ((i + 1) * (i + 1) < x) {
                continue;
            } 
            if ((i + 1) * (i + 1) == x) {
                return i + 1;
            }
            if (i * i <= x && (i + 1) * (i + 1) > x) {
                break;
            }
        }
        return i;
    }
