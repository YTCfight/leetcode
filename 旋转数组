//旋转数组
void Fun(int arr[], int len,int input)
{
	int i = 0;
	int tmp = 0;
	int newswap = 0;
	int *str = (int *)malloc(4 * len);
	for (i = 0; i < len; i++)
	{
		newswap = (i + input) % len;
		str[newswap] = arr[i];
	}
	for (i = 0; i < len; i++)
	{
		printf("%d ", str[i]);
	}
	printf("\n");
	free(str);
	str = NULL;
}
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int input = 0;
	scanf("%d", &input);
	Fun(arr, len,input);
	system("pause");
	return 0;
}




//java版

class Solution {
    public void rotate(int[] nums, int k) {
        // 如果数组长度为 1，直接返回
        if (nums.length == 1) {
            return;
        }
        while (k > 0) {
            // 先处理 nums[0]
            // ret 记录该位数变化之前的数字
            int ret = nums[0];
            nums[0] = nums[nums.length - 1];
            for (int i = 1; i < nums.length; i++) {
            // pre 记录变化之前的数字
            int pre = nums[i];
             nums[i] = ret;
             ret = pre;
            }
            k--;
        }
    }
}
