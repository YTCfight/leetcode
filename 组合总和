class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        if (candidates.length == 0 || target < 0) {
            return res;
        }
        List<Integer> list = new ArrayList<>();
        help(0, candidates, target, list);
        return res;
    }
    public void help(int start, int[] candidates, int target, List<Integer> list) {
        if (target < 0) {
            return;
        }
        if (target == 0) {
            res.add(new ArrayList(list));
        }
        for (int i = start; i < candidates.length; i++) {
            list.add(candidates[i]);
            help(i, candidates, target - candidates[i], list);
            list.remove(list.size() - 1);
        }
    }
}
